package main

import (
	"context"
	"log"

	"fmt"

	db "github.com/ivanstepachev/vpn_cron/db"
)



func main() {
	log.Println("Starting Cron VPN")

	ctx := context.Background()

	DB, err := db.Init()
	if err != nil {
		log.Println(err.Error())
		return
	}
	q := db.New(DB)

	q.SendMessageAdmin(ctx, "Starting Cron VPN Daily")
	// –°–æ—Ö—Ä–∞–Ω–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	
	tgUsersVPN, err := q.CountTgUsersDaily(ctx, "vpn")
	if err != nil {
		log.Println(err.Error())
		q.SendMessageAdmin(ctx, err.Error())
		return
	}
	tgUsersWalle, err := q.CountTgUsersDaily(ctx, "walle")
	if err != nil {
		log.Println(err.Error())
		q.SendMessageAdmin(ctx, err.Error())
		return
	}

	VPNUsersVPN, err := q.CountVPNUsersDaily(ctx, "vpn")
	if err != nil {
		log.Println(err.Error())
		q.SendMessageAdmin(ctx, err.Error())
		return
	}
	VPNUsersWalle, err := q.CountVPNUsersDaily(ctx, "walle")
	if err != nil {
		log.Println(err.Error())
		q.SendMessageAdmin(ctx, err.Error())
		return
	}

	usersChecking, err := q.AllUsers(ctx)
	if err != nil {
		log.Println(err.Error())
		q.SendMessageAdmin(ctx, err.Error())
		return
	}

	amountUsers := len(usersChecking)


	for i, user := range usersChecking {
		fmt.Println(i+1, "/", amountUsers, "   id: ", user.ID)
		q.SendPhoto(ctx, user, "https://ntens.ru/static/assets/wheel.jpg")
		message := "üî•–ó–∞–±–µ—Ä–∏ —Å–≤–æ–π –ø—Ä–∏–∑ –≤ –Ω–∞—à–µ–º –ö–æ–ª–µ—Å–µ —Ñ–æ—Ä—Ç—É–Ω—ãüéÅ\n–í—ã–∏–≥—Ä–∞–π 30 000 —Ä—É–± –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ü–µ–Ω–Ω—ã–π –ø—Ä–∏–∑ –∑–∞ –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ VPN –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤!üò≥\n\n–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–∞—Ä–∏—Ñ–∞:\n\n–ù–∞ 1 –º–µ—Å—è—Ü - –∫—Ä—É—Ç–∏ 1 —Ä–∞–∑\n–ù–∞ 3 –º–µ—Å—è—Ü–∞ - –∫—Ä—É—Ç–∏ 2 —Ä–∞–∑–∞\n\n–ê–∫—Ü–∏—è –≤ —á–µ—Å—Ç—å –Ω–∞—à–µ–π –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ 6 –º–µ—Å—è—Ü–µ–≤üî•"
		q.SendMessageToPay(ctx, user, message)
	}
	log.Println("Stop Cron VPN")
	q.SendMessageAdmin(ctx, "Stop Cron VPN Daily")
}